General:
    * update language graph code and data
        - pull from GHA instead of Travis

    * Add self-hosted CI mode/variable

    * Go through PRs. Close or update.

    * Add quick checklist for merging upstream to FAQ:

    * Add PR template/checklist.

    * Update diagrams to reflect the merged eval-ast/macroexpand
      process.

    * Check that implementations are actually running self-hosted.
      Check for "mal-user>" prompt or something.

    * update language graph code and data
        * pull from GHA instead of Travis

    * update get-changed-files
        * use GITHUB_OUTPUT instead of set-output
        * update version of node

    - Fix self-hosted implementations #662

    - Fix wasm modes wax and wace_libc

    - Fix wasm perf3 hang/OOM

All/multiple Implementations:
    - Add step3 and step4 tests. Fix powershell, jq, and xslt with
      binding/closures. https://github.com/kanaka/mal/issues/645

---------------------------------------------

Other ideas for All:
    - redefine (defmacro!) as (def! foo (macro*))
    - Fix/implement interop in more implementations

    - propagate/print errors when self-hosted
    - metadata on symbols (as per Clojure)
    - metadata as a map only. ^ merges metadata in the reader itself.
      Line numbers in metadata from reader.
    - protocols!
        - https://github.com/pixie-lang/pixie
        - http://www.toccata.io/2015/01/Mapping/
    - namespaces
        - environments first class: *ENV*, *outer* defined by env-new
        - namespaces is *namespaces* map in environment which maps namespace
          names to other environments.
        - def! become an alias for (env-set! *ENV* 'sym value)
        - Namespace lookup: go up the environment hierarchy until
          a *namespaces* map is found with the namespace name being
          looked up. Then the symbol would be looked up starting in
          the namespace environment. Need protocols first probably.

    - multi-line REPL read
    - explicit recur in loops (for error checking)
    - gensym reader inside quasiquote
    - standalone executables


---------------------------------------------

Bash:
    - explore using ${!prefix*} syntax (more like make impl)
    - GC
    - maybe make it work more like basic/wasm

C:
    - come up with better way to do 20 vararg code

C#:
    - accumulates line breaks with mal/clojurewest2014.mal
    - interop: http://www.ckode.dk/programming/eval-in-c-yes-its-possible/

CoffeeScript:
    - make target to compile to JS

Go:
    - consider variable arguments in places where it makes sense
        https://gobyexample.com/variadic-functions

Haskell:
    - TCO using seq/bang patterns:
      http://stackoverflow.com/questions/9149183/tail-optimization-guarantee-loop-encoding-in-haskell
    - immediately exits mal/clojurewest2014.mal ("\/" exception)

Java:
    - build step, don't use mvn in run script
    - Use gradle instead of mvn
        http://blog.paralleluniverse.co/2014/05/01/modern-java/

Javascript:
    - interop: adopt techniques from miniMAL

Make:
    - allow '_' in make variable names
    - hash-map with space in key string
    - errors should propagate up from within load-file
    - GC: explore using "undefine" directive in Make 3.82

Mal:
    - line numbers in errors
    - step5_tco

miniMAL:
    - figure out why {} literals are "static"/persistent

ObjPascal:
    - verify that GC/reference counting works
    - fix comment by itself error at REPL

plpgsql:
    - maybe combine wrap.sh and run

Perl:
    - fix metadata on native functions
    - fix extra line breaks at REPL

Postscript:
    - add negative numbers
    - fix blank line after comments
    - fix command line arg processing (doesn't run file specified)

Powershell:
    - convert function with "abc_def" to "abc-def"
    - remove extraneous return statements at end of functions
    - remove unnecessary semi-colons
    - use ArrayList instead of Array for performance
    - new test to test Keys/keys as hash-map key
    - test *? predicates with nil

R:
    - tracebacks in errors
    - fix running from different directory

Racket
    - metadata on collections

Rust:
    - fix 'make all' invocation of cargo build

Scala
    - readline
    - fix exception when finished running something on command line

VHDL:
    - combine run_vhdl.sh and run

vimscript:
    - combine run_vimscript.sh and run
