["do",

["load", ["`", "miniMAL-core.json"]],
["load", ["`", "types.json"]],
["load", ["`", "reader.json"]],
["load", ["`", "printer.json"]],

["def", "READ", ["fn", ["strng"],
  ["read-str", "strng"]]],

["def", "EVAL", ["fn", ["ast", "env"],
  ["if", ["symbol?", "ast"],
    ["let", ["sym", ["get", "ast", ["`", "val"]]],
      ["if", ["contains?", "env", "sym"],
        ["get", "env", "sym"],
        ["throw", ["str", ["`", "'"], "sym", ["`", "' not found"]]]]],
  ["if", ["vector?", "ast"],
    ["vectorl", ["map", ["fn", ["x"], ["EVAL", "x", "env"]], "ast"]],
  ["if", ["map?", "ast"],
    ["let", ["new-hm", ["hash-map"]],
      ["do",
        ["map", ["fn", ["k"], ["set", "new-hm",
                                "k",
                                ["EVAL", ["get", "ast", "k"], "env"]]],
                ["keys", "ast"]],
        "new-hm"]],
  ["if", ["not", ["list?", "ast"]],
        "ast",
        ["if", ["empty?", "ast"],
          "ast",
          ["let", ["el", ["map", ["fn", ["x"], ["EVAL", "x", "env"]], "ast"],
                   "f", ["first", "el"],
                   "args", ["rest", "el"]],
            ["apply", "f", "args"]]]]]]]]],

["def", "PRINT", ["fn", ["exp"],
  ["pr-str", "exp", true]]],


["def", "repl-env",
  ["hash-map",
    ["`", "+"], "+",
    ["`", "-"], "-",
    ["`", "*"], "*",
    ["`", "/"], ["fn", ["a", "b"], ["parseInt", ["/", "a", "b"]]]]],

["def", "rep", ["fn", ["strng"],
  ["try",
    ["PRINT", ["EVAL", ["READ", "strng"], "repl-env"]],
    ["catch", "exc",
      ["str", ["`", "Error: "], [".", "exc", ["`", "toString"]]]]]]],

["repl", ["`", "user> "], "rep"],

null

]
